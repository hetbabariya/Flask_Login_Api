"""V0_1

Revision ID: 6f111c00d29a
Revises: 
Create Date: 2023-12-22 10:41:49.361404

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6f111c00d29a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('is_valid', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_delete', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('OTP', sa.String(), nullable=True),
    sa.Column('otp_send_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('follower_count', sa.Integer(), nullable=True),
    sa.Column('following_count', sa.Integer(), nullable=True),
    sa.Column('post_count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('follower_following',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('followed_by', sa.UUID(), nullable=False),
    sa.Column('followed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['followed_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_follower_following_followed_by'), 'follower_following', ['followed_by'], unique=False)
    op.create_index(op.f('ix_follower_following_user_id'), 'follower_following', ['user_id'], unique=False)
    op.create_table('posts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('post', sa.String(), nullable=False),
    sa.Column('caption', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('is_archieve', sa.Boolean(), nullable=True),
    sa.Column('is_delete', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('like_count', sa.Integer(), nullable=True),
    sa.Column('comment_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_posts_user_id'), 'posts', ['user_id'], unique=False)
    op.create_table('post_comment',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('comment', sa.String(), nullable=False),
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('comment_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('comment_like_count', sa.Integer(), nullable=True),
    sa.Column('comment_reply_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_post_comment_post_id'), 'post_comment', ['post_id'], unique=False)
    op.create_index(op.f('ix_post_comment_user_id'), 'post_comment', ['user_id'], unique=False)
    op.create_table('post_likes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('like_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_post_likes_post_id'), 'post_likes', ['post_id'], unique=False)
    op.create_index(op.f('ix_post_likes_user_id'), 'post_likes', ['user_id'], unique=False)
    op.create_table('post_comment_like',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('comment_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('comment_like_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['post_comment.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_post_comment_like_comment_id'), 'post_comment_like', ['comment_id'], unique=False)
    op.create_index(op.f('ix_post_comment_like_post_id'), 'post_comment_like', ['post_id'], unique=False)
    op.create_index(op.f('ix_post_comment_like_user_id'), 'post_comment_like', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_post_comment_like_user_id'), table_name='post_comment_like')
    op.drop_index(op.f('ix_post_comment_like_post_id'), table_name='post_comment_like')
    op.drop_index(op.f('ix_post_comment_like_comment_id'), table_name='post_comment_like')
    op.drop_table('post_comment_like')
    op.drop_index(op.f('ix_post_likes_user_id'), table_name='post_likes')
    op.drop_index(op.f('ix_post_likes_post_id'), table_name='post_likes')
    op.drop_table('post_likes')
    op.drop_index(op.f('ix_post_comment_user_id'), table_name='post_comment')
    op.drop_index(op.f('ix_post_comment_post_id'), table_name='post_comment')
    op.drop_table('post_comment')
    op.drop_index(op.f('ix_posts_user_id'), table_name='posts')
    op.drop_table('posts')
    op.drop_index(op.f('ix_follower_following_user_id'), table_name='follower_following')
    op.drop_index(op.f('ix_follower_following_followed_by'), table_name='follower_following')
    op.drop_table('follower_following')
    op.drop_table('user')
    # ### end Alembic commands ###
